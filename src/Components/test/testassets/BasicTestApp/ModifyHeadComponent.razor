@using Microsoft.AspNetCore.Components.Web.Extensions

<p>
    Multiple title elements:<br />
    @for (int i = 0; i < titles.Length; i++)
    {
        var titleId = i;

        <button @onclick="() => ToggleTitle(titleId)">@(titles[titleId] ? "Disable" : "Enable") title @titleId</button>

        if (titles[titleId])
        {
            <Title Value="@($"Title {titleId}")" />
        }
    }
</p>

<p>
    Add/remove meta element:<br />
    <button @onclick="ToggleMetaDescription">@(renderSingleMeta ? "Disable" : "Enable") meta description</button>
    @if (renderSingleMeta)
    {
        <Meta Name="description" Content="Modifying the head from a Blazor component." />
    }
</p>

<p>
    Nested meta elements:<br />
    <button @onclick="ToggleMetaNested">@(renderNestedMeta ? "Disable" : "Enable") meta http-equiv nested</button>
    @if (renderNestedMeta)
    {
        <div>
            <Meta HttpEquiv="test" Content="Layer 1" />
            <div>
                <Meta HttpEquiv="test" Content="Layer 2" />
                <div>
                    <Meta HttpEquiv="test" Content="Layer 3" />
                    <div>
                        <Meta HttpEquiv="test" Content="Layer 4" />
                    </div>
                </div>
            </div>
        </div>
    }
</p>

<p>
    Nested link elements:<br />
    <button @onclick="ToggleLinkNested">@(renderNestedLink ? "Disable" : "Enable") link nested</button>
    @if (renderNestedLink)
    {
        <div>
            <Link attr1="some attribute" attr2="Layer 1" />
            <div>
                <Link attr1="some attribute" attr2="Layer 2" />
                <div>
                    <Link attr1="some other attribute" attr2="Layer 3" extra-attr="one more" />
                </div>
            </div>
        </div>
    }
</p>

<p>
    Link elements w/ bindings:<br />
    <input @bind="@linkAttribute1" placeholder="Attribute 1" /><br />
    <input @bind="@linkAttribute2" placeholder="Attribute 2"/><br />
    <Link attr1="@linkAttribute1" attr2="@linkAttribute2" />
</p>

@code {
    private readonly bool[] titles = Enumerable.Repeat(false, 6).ToArray();

    private bool renderSingleMeta = false;
    private bool renderNestedMeta = false;
    private bool renderNestedLink = false;

    private string linkAttribute1 = "First attribute";
    private string linkAttribute2 = "Second attribute";

    private void ToggleTitle(int titleId)
    {
        titles[titleId] = !titles[titleId];
        StateHasChanged();
    }

    private void ToggleMetaDescription()
    {
        renderSingleMeta = !renderSingleMeta;
        StateHasChanged();
    }

    private void ToggleMetaNested()
    {
        renderNestedMeta = !renderNestedMeta;
        StateHasChanged();
    }

    private void ToggleLinkNested()
    {
        renderNestedLink = !renderNestedLink;
        StateHasChanged();
    }
}
