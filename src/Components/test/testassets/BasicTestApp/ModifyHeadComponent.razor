@using Microsoft.AspNetCore.Components.Web.Extensions

<p>
    @for (int i = 0; i < titles.Length; i++)
    {
        var titleId = i;

        <button @onclick="() => ToggleTitle(titleId)">@(titles[titleId] ? "Disable" : "Enable") title @titleId</button>

        if (titles[titleId])
        {
            <Title Value="@($"Title {titleId}")" />
        }
    }
</p>

<p>
    <button @onclick="ToggleMetaDescription">@(renderMeta ? "Disable" : "Enable") meta description</button>
    @if (renderMeta)
    {
        <Meta Name="description" Content="Modifying the head from a Blazor component." />
    }
</p>

<p>
    <button @onclick="ToggleMetaNested">@(renderNested ? "Disable" : "Enable") meta http-equiv nested</button>
    @if (renderNested)
    {
        <div>
            <Meta HttpEquiv="test" Content="Layer 1" />
            <div>
                <Meta HttpEquiv="test" Content="Layer 2" />
                <div>
                    <Meta HttpEquiv="test" Content="Layer 3" />
                    <div>
                        <Meta HttpEquiv="test" Content="Layer 4" />
                    </div>
                </div>
            </div>
        </div>
    }
</p>

@code {
    private readonly bool[] titles = Enumerable.Repeat(false, 6).ToArray();

    private bool renderMeta = false;
    private bool renderNested = false;

    private void ToggleTitle(int titleId)
    {
        titles[titleId] = !titles[titleId];
        StateHasChanged();
    }

    private void ToggleMetaDescription()
    {
        renderMeta = !renderMeta;
        StateHasChanged();
    }

    private void ToggleMetaNested()
    {
        renderNested = !renderNested;
        StateHasChanged();
    }
}
